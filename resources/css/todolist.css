/* Fonts */
* {
    font-family: "Times New Roman", Times, serif;
}

input[type*="text"] {   /* input containing text */
    font-family: Arial, Helvetica, sans-serif;
}

input[type="date"] {
    font-family: "Lucida Console", "Courier New", monospace;
}

/* Todo filters */
#todofilter {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    flex-wrap: nowrap;
    margin: 1.5em;
}

/* Flex container for each filter */
#todofilter > * {
    display: flex;
    flex-direction: row;
    flex-wrap: nowrap;
    justify-content: space-between;
}

#todofilter > * > * {
    margin: 0.3em 0;
}

#todofilter > * > span {
    align-self: flex-start;
}

/* Filter container */
.toggles3 {
    position:relative;
    font-size:1em; /* Size of the whole switch*/
    align-self: flex-end;
}

/* Move radio buttons off screen */
.radio1,
.radio2,
.radio3 {
    position: absolute;
    left: -9999px;
}

/* Container for the toggle on screen */
.sliderContainer{
    height: 2em;
    width: 6em;
    margin: 2px auto;
    position: relative;
    display: inline-block;
    background: var(--todo-filter-background-color);

    --button-width: calc(6em / 3);
    --pos2-left: calc(6em / 3);  /* relative to width */
    --pos3-left: calc(6em / 3 * 2);
    border-radius: 2em;

    /* Variable for check and cross mark line width */
    --line-width: 3px;
}

/* Each label where user can click to toggle */
.label1,
.label2,
.label3 {
    height: 100%;
    width: var(--button-width);
    box-sizing: border-box;
    position: absolute;
    top: 0;
    cursor: pointer;
    left: 0;
    z-index: 2;
}

/* Set the position of 2nd and 3rd label */
.label2 {
    left: var(--pos2-left);
}

.label3 {
    left: var(--pos3-left);
}

/* The moving component of the toggle */
.slider {
    box-sizing: border-box;
    display: inline-block;
    height: 100%;
    width: var(--button-width);
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    z-index: 1;

    cursor: default;
    /* pointer-events: none;
    cursor: default; */

    border-radius: 2em;
    background-color:var(--nav-color);
    -webkit-transition: .4s;
    transition: .4s;
}

/* Toggle behavior */
.radio1:checked ~ .sliderContainer .slider {
    background-color: var(--color-green);
}
  
.radio2:checked ~ .sliderContainer .slider {
    -webkit-transform: translateX(var(--pos2-left));
    -ms-transform: translateX( var(--pos2-left));
    transform: translateX(var(--pos2-left));
}
  
.radio3:checked ~ .sliderContainer .slider {
    -webkit-transform: translateX(var(--pos3-left));
    -ms-transform: translateX(var(--pos3-left));
    transform: translateX(var(--pos3-left));

    background-color: var(--color-red);
}

/* The style of the content of these labels */
.sliderContainer .check {

    position: inherit;
    top: 20%;
    left: 35%;
    /* Display a check mark */
    transform-origin: center;
    transform: rotate(45deg);
    height: 40%;
    width: 20%;
    border-bottom: var(--line-width) solid var(--font-color);
    border-right: var(--line-width) solid var(--font-color);
}

.sliderContainer .text {
    position: relative;
    display: inline-block;
    width: var(--button-width);
    height: 1em;
    /* line-height: 0; */
    font-size: 1em;
    padding: 0;
    top: calc((100% - 1em) / 2);
    text-align: center;
    z-index: 4;
    /* vertical-align: middle; */
}

.sliderContainer .cross {
    height: 100%;
    width: var(--button-width);
    position: inherit;
    /* Display a cross mark */
    background:
      linear-gradient(var(--font-color) 0 0),
      linear-gradient(var(--font-color) 0 0);
    background-position:center;
    background-size: 50% var(--line-width), var(--line-width) 50%; /*thickness = 2px, length = 50% (25px)*/
    background-repeat:no-repeat;

    /* Make the plus sign a cross sign */
    -webkit-transform:rotate(45deg);
    -moz-transform:rotate(45deg);
    transform:rotate(45deg);
}

/* Filter functionality */
#todolist[donefilter="done"] .todoitem:not(.done) {
    display: none;
}

#todolist[donefilter="notdone"] .todoitem.done {
    display: none;
}

#todolist[overduefilter="overdue"] .todoitem:not(.overdue) {
    display: none;
}

#todolist[overduefilter="notoverdue"] .todoitem.overdue {
    display: none;
}

/* Todo list */
#todolist {
    display: flex;
    flex-direction: column;
    flex-wrap: wrap;
    justify-content: center;
}

#todolist > *:hover {
    background-color: var(--todo-item-hover-color);
}

/* Todo item flex box */
.todoitem {
    display: flex;
    flex-direction: row;
    flex-wrap: nowrap;
    justify-content: start;
    align-items: flex-start;
    gap: 1em;
}

.todoitem > * {
    margin: 0.5em;
    height: 2em;
    flex-grow: 0;
}

.todoitem > .checkcontainer, .todoitem > .deletecontainer {
    flex-grow: 1;
}

.todoitem > .textcontainer {
    flex-grow: 14;
}

.todoitem > .datecontainer {
    flex-grow: 4;
}


/* Checkbox (circle) */
/* The container must be a label for the check to go through the custom checkbox to the browser checkbox */
.checkcontainer {
    user-select: none; /* user cannot select text */
    position: relative;
    z-index: 0;
}

/* Hide the browser's default checkmark */
.checkcontainer input[type="checkbox"] {
    position: absolute;
    opacity: 0;
    width: 0;
    height: 0;
}

/* Customize the custom checkbox */
.checkcontainer .todocheck {
    position: absolute; /* without this the todocheck doesnt show up! */
    top: 15%;
    left: 0;
    height: 1.5em;
    width: 1.5em;
    cursor: pointer;
    border-radius: 50%;
    border-width: 1px;
    border-color: var(--todo-check-color);
    border-style: solid;
}

/* On mouse-hover when checkbox unchecked, add a background color */
.checkcontainer:hover input:not(:checked) ~ .todocheck {
    opacity: 0.5;
    background-color: var(--todo-check-hover-color);
}

/* When the checkbox is checked: */
.checkcontainer input:checked ~ .todocheck {
    /* background-color: #2196F3; */
    border-style: none; /* hide borders */
}

/* Hide check (circle) when not checked */
.todocheck::after {
    content: "";
    position: absolute;
    display: none;
}

/* Display check (circle) when checked */
.checkcontainer input:checked ~ .todocheck::after {
    display: block;
}

/* Customize the check (circle)  */
.checkcontainer .todocheck::after {
    width: 100%;
    height: 100%;
    background: var(--todo-check-color);

    border-radius: 50%;
    border-width: 1px;
    border-color: var(--todo-check-color);
    border-style: solid;
}

/* Todo Text */
.textcontainer .todotext {
    background-color: inherit;
    border-bottom-width: 1px;
    border-top-width: 0;
    border-left-width: 0;
    border-right-width: 0;
    font-size: 1.5em;
    width: 100%;
    border-color: var(--todo-text-border-color);
    color: var(--font-color);
}

.textcontainer .todotext:focus {
    border-radius: 5px;
    border-width: 1.5px;
    border-color: var(--todo-text-border-color);
    outline: 0;  /* hide default browser outline; bad for accessibility? */
    transition: border 100ms;
}

.datecontainer {
    user-select: none;
    width: 15%;
}

.datecontainer .tododate {
    position: relative;
    top: 5%;
    width: 100%;
    height: 90%;
    color: var(--todo-date-text-color);
    background-color: var(--todo-date-background-color);
    border-width: 0;
    font-weight: bold;
}

/* Overdue but done */
.todoitem.overdue.done .datecontainer .tododate {
    color: var(--color-green);
}

/* Overdue but not done */
.todoitem.overdue .datecontainer .tododate {
    color: var(--color-red);
}

.deletecontainer {
    cursor: pointer;
}

.deletecontainer input {
    position: absolute;
    opacity: 0;
    width: 0;
    height: 0;
    border: 0;
    padding: 0;
}

/* Remove button */
.tododelete {
    display:inline-block;
    width: 2em;
    height: 2em;

    background:
      linear-gradient(var(--todo-add-delete-item-color) 0 0),
      linear-gradient(var(--todo-add-delete-item-color) 0 0);
    background-position:center;
    background-size: 50% 2px,2px 50%; /*thickness = 2px, length = 50% (25px)*/
    background-repeat:no-repeat;

    /* Make the plus sign a cross sign */
    -webkit-transform:rotate(45deg);
    -moz-transform:rotate(45deg);
    transform:rotate(45deg);

    -webkit-transition: -webkit-transform 1s ease-out;
    -moz-transition: -moz-transform 1s ease-out;
    transition: transform 0.5s ease-out;
}

.deletecontainer:hover .tododelete{
    -webkit-transform:rotate(-45deg);
    -moz-transform:rotate(-45deg);
    transform:rotate(-45deg);
}


@keyframes rotateAnimation {
    to {
        -webkit-transform: rotate(45deg);
        -moz-transform: rotate(45deg);
        transform: rotate(45deg);
    }
}

/* "Add Item" Row */
#addTodoitem {
    cursor: pointer;
    width: 100%;
    padding: 0;
    text-align: center;
}

#plus {
    display:inline-block;
    width: 2em;
    height: 2em;
    
    background:
      linear-gradient(var(--todo-add-delete-item-color) 0 0),
      linear-gradient(var(--todo-add-delete-item-color) 0 0);
    background-position:center;
    background-size: 50% 2px,2px 50%; /*thickness = 2px, length = 50% (25px)*/
    background-repeat:no-repeat;
}